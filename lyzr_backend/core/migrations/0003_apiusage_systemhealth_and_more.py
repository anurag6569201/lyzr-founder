# Generated by Django 5.2.4 on 2025-07-28 19:42

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_alter_conversation_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='APIUsage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('endpoint', models.CharField(help_text='API endpoint called', max_length=100)),
                ('request_count', models.IntegerField(default=1)),
                ('tokens_used', models.IntegerField(default=0)),
                ('response_time', models.DurationField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(decimal_places=6, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('component', models.CharField(choices=[('LYZR_API', 'Lyzr API'), ('DATABASE', 'Database'), ('REDIS', 'Redis'), ('STORAGE', 'File Storage')], max_length=20)),
                ('status', models.CharField(choices=[('HEALTHY', 'Healthy'), ('DEGRADED', 'Degraded'), ('DOWN', 'Down')], max_length=10)),
                ('response_time', models.DurationField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('checked_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-checked_at'],
            },
        ),
        migrations.RemoveField(
            model_name='knowledgesourcerefresh',
            name='knowledge_source',
        ),
        migrations.AlterModelOptions(
            name='agent',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='knowledgebase',
            options={'ordering': ['-created_at']},
        ),
        migrations.RenameField(
            model_name='knowledgesource',
            old_name='last_refreshed',
            new_name='indexed_at',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='api_endpoint',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='api_headers',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='api_params',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='auto_refresh',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='database_config',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='integration_config',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='refresh_interval_hours',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='size_bytes',
        ),
        migrations.RemoveField(
            model_name='knowledgesource',
            name='url',
        ),
        migrations.AddField(
            model_name='agent',
            name='description',
            field=models.TextField(blank=True, help_text='Description of what this agent does'),
        ),
        migrations.AddField(
            model_name='agent',
            name='max_tokens',
            field=models.IntegerField(default=1500, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8000)]),
        ),
        migrations.AddField(
            model_name='agent',
            name='timeout_seconds',
            field=models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(300)]),
        ),
        migrations.AddField(
            model_name='conversation',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='conversation',
            name='message_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='conversation',
            name='referrer',
            field=models.URLField(blank=True, help_text='Referrer URL'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='satisfaction_rating',
            field=models.IntegerField(blank=True, help_text='User satisfaction rating (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='conversation',
            name='session_duration',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='conversation',
            name='user_agent',
            field=models.TextField(blank=True, help_text='Browser user agent'),
        ),
        migrations.AddField(
            model_name='knowledgebase',
            name='description',
            field=models.TextField(blank=True, help_text='Description of the knowledge base content'),
        ),
        migrations.AddField(
            model_name='knowledgebase',
            name='last_indexed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='knowledgebase',
            name='total_documents',
            field=models.IntegerField(default=0, help_text='Total number of indexed documents'),
        ),
        migrations.AddField(
            model_name='knowledgebase',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='knowledgesource',
            name='document_count',
            field=models.IntegerField(default=0, help_text='Number of documents extracted'),
        ),
        migrations.AddField(
            model_name='knowledgesource',
            name='file_size',
            field=models.BigIntegerField(blank=True, help_text='File size in bytes', null=True),
        ),
        migrations.AddField(
            model_name='knowledgesource',
            name='processing_time',
            field=models.DurationField(blank=True, help_text='Time taken to process', null=True),
        ),
        migrations.AddField(
            model_name='knowledgesource',
            name='retry_count',
            field=models.IntegerField(default=0, help_text='Number of retry attempts'),
        ),
        migrations.AddField(
            model_name='message',
            name='confidence_score',
            field=models.FloatField(blank=True, help_text='AI confidence score', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='message',
            name='model_used',
            field=models.CharField(blank=True, help_text='Model used for AI responses', max_length=100),
        ),
        migrations.AddField(
            model_name='message',
            name='response_time',
            field=models.DurationField(blank=True, help_text='Time taken to generate response', null=True),
        ),
        migrations.AddField(
            model_name='message',
            name='token_count',
            field=models.IntegerField(blank=True, help_text='Number of tokens in message', null=True),
        ),
        migrations.AddField(
            model_name='ticketnote',
            name='is_internal',
            field=models.BooleanField(default=True, help_text='Internal note not visible to end user'),
        ),
        migrations.AddField(
            model_name='ticketnote',
            name='priority',
            field=models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10),
        ),
        migrations.AlterField(
            model_name='agent',
            name='model',
            field=models.CharField(choices=[('gpt-4o', 'GPT-4o'), ('gpt-4-turbo', 'GPT-4 Turbo'), ('gpt-3.5-turbo', 'GPT-3.5 Turbo'), ('gemini/gemini-1.5-pro-latest', 'Gemini 1.5 Pro'), ('gemini/gemini-1.5-flash-latest', 'Gemini 1.5 Flash'), ('claude-3-sonnet-20240229', 'Claude 3 Sonnet'), ('claude-3-haiku-20240307', 'Claude 3 Haiku')], default='gpt-4o', max_length=50),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='end_user_id',
            field=models.CharField(help_text='Session or user identifier', max_length=255),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='status',
            field=models.CharField(choices=[('ACTIVE', 'Active'), ('RESOLVED', 'Resolved'), ('FLAGGED', 'Flagged for Review'), ('ARCHIVED', 'Archived')], default='ACTIVE', max_length=20),
        ),
        migrations.AlterField(
            model_name='knowledgesource',
            name='content',
            field=models.TextField(blank=True, help_text='URL or raw text content'),
        ),
        migrations.AlterField(
            model_name='knowledgesource',
            name='file_type',
            field=models.CharField(blank=True, choices=[('pdf', 'PDF Document'), ('docx', 'Word Document'), ('doc', 'Word Document (Legacy)'), ('txt', 'Text File'), ('csv', 'CSV File'), ('json', 'JSON File'), ('html', 'HTML File'), ('md', 'Markdown File')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='knowledgesource',
            name='metadata',
            field=models.JSONField(default=dict, help_text='Additional metadata specific to source type'),
        ),
        migrations.AlterField(
            model_name='knowledgesource',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('INDEXING', 'Indexing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('RETRY', 'Retrying')], default='PENDING', max_length=10),
        ),
        migrations.AlterField(
            model_name='knowledgesource',
            name='type',
            field=models.CharField(choices=[('URL', 'URL/Website'), ('FILE', 'File Upload'), ('TEXT', 'Raw Text')], max_length=10),
        ),
        migrations.AlterField(
            model_name='message',
            name='metadata',
            field=models.JSONField(default=dict, help_text='Additional message metadata'),
        ),
        migrations.AlterField(
            model_name='message',
            name='sender_type',
            field=models.CharField(choices=[('USER', 'User'), ('AI', 'AI Assistant'), ('SYSTEM', 'System')], max_length=10),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='core_messag_convers_d2b392_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender_type', 'created_at'], name='core_messag_sender__b9371a_idx'),
        ),
        migrations.AddField(
            model_name='apiusage',
            name='agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_usage', to='core.agent'),
        ),
        migrations.AddField(
            model_name='apiusage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_usage', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='KnowledgeSourceRefresh',
        ),
        migrations.AddIndex(
            model_name='apiusage',
            index=models.Index(fields=['user', 'date'], name='core_apiusa_user_id_d64e41_idx'),
        ),
        migrations.AddIndex(
            model_name='apiusage',
            index=models.Index(fields=['agent', 'date'], name='core_apiusa_agent_i_e6beea_idx'),
        ),
    ]
